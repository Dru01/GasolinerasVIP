// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using GasolinerasVIP.Models;
//
//    var gasStation = GasStation.FromJson(jsonString);

namespace GasolinerasVIP.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    enum GasType
    {
        MAGNA,
        PREMIUM,
        DIESEL
    }

    public partial class GasStation
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("address")]
        public string Address { get; set; }

        [JsonProperty("rating")]
        public decimal Rating { get; set; }

        [JsonProperty("magnaPrice")]
        public decimal MagnaPrice { get; set; }

        [JsonProperty("premiumPrice")]
        public decimal PremiumPrice { get; set; }

        [JsonProperty("dieselPrice")]
        public decimal DieselPrice { get; set; }

        [JsonProperty("imageUrl")]
        public Uri ImageUrl { get; set; }
    }

    public partial class GasStation
    {
        public static List<GasStation> FromJson(string json) => JsonConvert.DeserializeObject<List<GasStation>>(json, GasolinerasVIP.Models.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this List<GasStation> self) => JsonConvert.SerializeObject(self, GasolinerasVIP.Models.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
